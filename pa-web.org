* PA-WEB
Gestione sito web project arrakis

Le idee di strutturazione sito vengono da 
http://exploreflask.com
e da
https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world

* TRACKING
** 2017-08-10
inserted a customized .gitignore file, it's important excluding virtual enviroment
and folder instance that will contain secret config variables.
IMPORTANT - the instance forlder and the config.py in it must be created manually

created a virtual enviroment

freezed python packages with command: pip freeze > requirements.txt

Application structure sketch

.
├── config.py
├── instance
│   └── config.py
├── pa_web
│   ├── forms.py
│   ├── __init__.py
│   ├── models.py
│   ├── static
│   ├── templates
│   └── views.py
├── requirements.txt
└── run.py



** 2017-08-11
Managing config.py, we will use 2 config.py, the first in app root directory,
the other in instance/

Add sqlalchemy t project and requirements


** 2017-08-13
Inserted a basic view , modified __init__.py, run.py and views.py.


** 2017-08-24 
Created base.html with bootstrap as a layout for the application
Start managing localisation and I18N, 
for dates and times we will use the package flask-moment, the server (my RPI) is configured in UTC


** 2017-08-25
Added a contact form
Starting with email management

The problem with email management is that they are not a backgroud task, they can be converted to a backgroud task 
but still, with a lot uf users, the program will have a lot of threads.
The solution semms to be the use of CELERY , a task queue.

** 2017-08-29
Restructuring app using blueprints
The app will have 2 areas
1) main : container of arrakis weather by now
2) auth : authentication forms
  
We start with the rearrangement of config to handle different config options


* NOTES
To list a tree directory structure use
tree -I 'venv|*~|*#|*.pyc'

* TASKS
** TODO - Remove file .#pa-web.org@ from git

* PACKAGES REQUIRED
flask
sqlalchemy
